---
- name: Install Samba and dependencies
  ansible.builtin.apt:
    name:
      - samba
      - smbclient
      - expect
      - python3-pexpect
    state: present
  when: ansible_os_family == "Debian"

- name: Create samba share directories
  ansible.builtin.file:
    path: "{{ item.share_path }}"
    state: directory
    mode: '0755'
  loop: "{{ samba_users }}"

- name: Check if Samba users exist
  ansible.builtin.command: "getent passwd {{ item.name }}"
  register: user_check
  ignore_errors: true
  changed_when: false
  loop: "{{ samba_users }}"
  tags: create_users

- name: Set up users if they don't exist
  ansible.builtin.user:
    name: "{{ item.name }}"
    state: present
    password: "{{ item.hashed_password }}"
  when: user_check.results[item_index].rc != 0
  loop: "{{ samba_users }}"
  loop_control:
    index_var: item_index
  tags: create_users

- name: Add Samba users to Samba database
  ansible.builtin.expect:
    command: smbpasswd -a {{ item.name }}
    responses:
      'New SMB password:': "{{ item.password }}"
      'Retype new SMB password:': "{{ item.password }}"
  loop: "{{ samba_users }}"
  no_log: true

- name: Join Samba share configurations
  ansible.builtin.set_fact:
    samba_share_configs: "{{ samba_share_configs | default([]) + [{'share_name': item.share_name, 'share_path': item.share_path, 'name': item.name}] }}"
  loop: "{{ samba_users }}"

- name: Configure Samba shares
  ansible.builtin.template:
    src: smb.conf.j2
    dest: /etc/samba/smb.conf
    mode: '0644'

- name: Restart Samba service
  ansible.builtin.service:
    name: smbd
    state: restarted
